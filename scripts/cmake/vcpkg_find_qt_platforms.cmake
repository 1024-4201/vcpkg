function(vcpkg_find_qt_platforms)
## Figure out QTs target mkspec
if(NOT DEFINED VCPKG_QT_TARGET_PLATFORM)
    if(VCPKG_TARGET_IS_WINDOWS)    
        if(VCPKG_TARGET_IS_UWP)
            if(VCPKG_PLATFORM_TOOLSET STREQUAL "v140")
                set(msvc_year "2015")
            elseif(VCPKG_PLATFORM_TOOLSET STREQUAL "v141")
                set(msvc_year "2017")
            elseif(VCPKG_PLATFORM_TOOLSET STREQUAL "v142")
                set(msvc_year "2019")
            else()
            endif()
            set(VCPKG_QT_TARGET_PLATFORM "winrt-${VCPKG_TARGET_ARCHITECTURE}-msvc${msvc_year}" PARENT_SCOPE)
        else()
            vcpkg_fail_port_install(MESSAGE "ARM Target not support for non uwp windows targets. Try ARM64!" ON_ARCH "arm")
            if(VCPKG_TARGET_ARCHITECTURE STREQUAL arm64)
                set(VCPKG_QT_TARGET_PLATFORM "win32-arm64-msvc2017" PARENT_SCOPE) #mkspec does not have anything defined related to msvc2017 so this should work
            else()
                set(VCPKG_QT_TARGET_PLATFORM "win32-msvc" PARENT_SCOPE)
            endif()
        endif()
    elseif(VCPKG_TARGET_IS_LINUX)
        set(VCPKG_QT_TARGET_PLATFORM "linux-g++" PARENT_SCOPE)
    elseif(VCPKG_TARGET_IS_OSX)
        set(VCPKG_QT_TARGET_PLATFORM "macx-clang" PARENT_SCOPE)
    endif()
endif()

## Figure out QTs host mkspec
if(NOT DEFINED VCPKG_QT_HOST_PLATFORM)
    if(CMAKE_HOST_WIN32 AND NOT VCPKG_TARGET_IS_WINDOWS)
        set(VCPKG_QT_HOST_PLATFORM "win32-msvc" PARENT_SCOPE)
    elseif("${CMAKE_HOST_SYSTEM}" STREQUAL "Linux")
        set(VCPKG_QT_HOST_PLATFORM "linux-g++")
    elseif("${CMAKE_HOST_SYSTEM}" STREQUAL "Darwin")
        set(VCPKG_QT_HOST_PLATFORM "macx-clang" PARENT_SCOPE)
    else()
        message(STATUS "VCPKG_QT_HOST_PLATFORM not set. Qt's own buildsystem will try to figure out the host system") 
    endif()
endif()

## Figure out VCPKG qt-tools directory for the port. 
if(NOT DEFINED VCPKG_QT_HOST_TOOLS_ROOT_DIR AND DEFINED VCPKG_QT_HOST_PLATFORM) ## Root dir of the required host tools 
    if(NOT ${VCPKG_QT_HOST_PLATFORM} MATCHES ${VCPKG_QT_TARGET_PLATFORM})
        if(CMAKE_HOST_WIN32)
            if(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "arm")
                list(APPEND VCPKG_QT_HOST_TOOLS_ROOT_TEST_TRIPLETS arm64-windows)
            elseif(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "AMD64")
                list(APPEND VCPKG_QT_HOST_TOOLS_ROOT_TEST_TRIPLETS x64-windows x64-windows-static)
                list(APPEND VCPKG_QT_HOST_TOOLS_ROOT_TEST_TRIPLETS x86-windows x86-windows-static)
            elseif(${CMAKE_HOST_SYSTEM_PROCESSOR} MATCHES "X86")
                list(APPEND VCPKG_QT_HOST_TOOLS_ROOT_TEST_TRIPLETS x86-windows x86-windows-static)
            else()
                message(FATAL_ERROR "Unknown host processor! Cannot figure out VCPKG_QT_HOST_TOOLS_ROOT_TEST_TRIPLETS")
            endif()
        elseif(CMAKE_HOST_SYSTEM STREQUAL "Linux")
            list(APPEND VCPKG_QT_HOST_TOOLS_ROOT_TEST_TRIPLETS "x64-linux")
        elseif(CMAKE_HOST_SYSTEM STREQUAL "Darwin")
            list(APPEND VCPKG_QT_HOST_TOOLS_ROOT_TEST_TRIPLETS "x64-osx")
        else()
        endif()
        foreach(_triplet ${VCPKG_QT_HOST_TOOLS_ROOT_TEST_TRIPLETS})
            if(EXISTS "${VCPKG_ROOT_DIR}/installed/${_triplet}/share/qt5/host")
                set(${VCPKG_QT_HOST_TOOLS_ROOT_DIR} "${VCPKG_ROOT_DIR}/installed/${_triplet}" PARENT_SCOPE)
				message(STATUS "Qt host tools root dir within vcpkg: ${VCPKG_QT_HOST_TOOLS_ROOT_DIR}")
				break()
            endif()     
        endforeach()
        if(NOT DEFINED VCPKG_QT_HOST_TOOLS_ROOT_DIR)
            message(FATAL_ERROR "Unable to locate required host tools. Please define VCPKG_QT_HOST_TOOLS_ROOT_DIR to the required root dir of the host tools") 
        endif()       
    endif()
endif()
endfunction()